{
  // .html.eex
  "html-eex block": {
    "prefix": "e=",
    "body": ["<%= $1 %>$0"],
    "description": "<%= expression %>"
  },

  "html-eex case": {
    "prefix": "case",
    "body": [
      "<%= case ${1:@expression} do %>",
      "\t<% $2 -> %>",
      "\t\t$3",
      "\t<% true -> %>",
      "\t\t$4",
      "<% end %>$0"
    ],
    "description": "<%= case do %>"
  },

  "html-eex cond": {
    "prefix": "cond",
    "body": [
      "<%= cond do %>",
      "\t<% $1 -> %>",
      "\t\t$2",
      "\t<% true -> %>",
      "\t\t$3",
      "<% end %>$0"
    ],
    "description": "<%= cond do %>"
  },

  "html-eex else": {
    "prefix": "else",
    "body": ["<% else %>$0"],
    "description": "<% else %>"
  },

  "html-eex end": {
    "prefix": "=end",
    "body": ["<% end %>$0"],
    "description": "<% end %>"
  },

  "html-eex for": {
    "prefix": "for",
    "body": ["<%= for ${1:item} <- ${2:@${3:items}} do %>", "\t$4", "<% end %>$0"],
    "description": "<%= for do %>"
  },

  "html-eex form_for": {
    "prefix": "ff",
    "body": [
      "<%= form_for ${1:@${2:changeset}}, Routes.${3:resource}_path(@conn, :${4:create}), ${5:[$6]}, fn f -> %>",
      "\t$7",
      "<% end %>$0"
    ],
    "description": "<%= form_for %>"
  },

  "html-eex form.error_tag": {
    "prefix": "et",
    "body": ["<%= error_tag ${1:f}, :${2:field} %>$0"],
    "description": "<%= error_tag %>"
  },

  "html-eex form.label": {
    "prefix": "la",
    "body": ["<%= label ${1:f}, :${2:field}, \"${3:Label}\" %>$0"],
    "description": "<%= label %>"
  },

  "html-eex form.password_input": {
    "prefix": "pi",
    "body": ["<%= password_input ${1:f}, :${2:field} %>$0"],
    "description": "<%= password_input %>"
  },

  "html-eex form.submit": {
    "prefix": "sub",
    "body": ["<%= submit ${1:Submit} %>$0"],
    "description": "<%= submit %>"
  },

  "html-eex form.text_input": {
    "prefix": "ti",
    "body": ["<%= text_input ${1:f}, :${2:field} %>$0"],
    "description": "<%= text_input %>"
  },

  "html-eex if": {
    "prefix": "if",
    "body": ["<%= if ${1:true} do %>", "\t$2", "<% end %>$0"],
    "description": "<%= if true do %>"
  },

  "html-eex link": {
    "prefix": "lt",
    "body": ["<%= link \"$1\", to: ${2:Routes.${3:resource}_path(@${4:conn}, :${5:index})} %>$0"],
    "description": "<%= link to: %>"
  },

  "html-eex link (block)": {
    "prefix": "ltb",
    "body": [
      "<%= link to: ${1:Routes.${2:resource}_path(@${3:conn}, :${4:index})} do %>",
      "\t$5",
      "<% end %>$0"
    ],
    "description": "<%= link to: do %> block"
  },
  "html-eex render": {
    "prefix": "render",
    "body": ["<%= render \"${1:file}.html\", ${2:conn: ${3:@conn}} %>$0"],
    "description": "eex render"
  },

  "html-eex unless": {
    "prefix": "unless",
    "body": ["<%= unless ${1:true} do %>", "\t$2", "<% end %>$0"],
    "description": "<%= unless do %>"
  },

  // .html.leex
  "LiveView form_for": {
    "prefix": "ffl",
    "body": [
      "<%= f = form_for ${1:@${2:changeset}}, \"#\", ${3:[phx_change: :validate, phx_submit: :submit]} %>",
      "\t$4",
      "</form>$0"
    ],
    "description": "<%= f = form_for %>"
  },

  "LiveView live_patch": {
    "prefix": "lp",
    "body": [
      "<%= live_patch \"$1\", to: Routes.${2:resource}_path(@socket, :${2:show}) %>%0",
      "$2"
    ],
    "description": "<%= live_patch %>"
  },

  "LiveView live_patch block": {
    "prefix": "lpb",
    "body": [
      "<%= live_patch to: Routes.${1:resource}_path(@socket, :${2:show}) do %>",
      "\t$3",
      "<% end %>$0"
    ],
    "description": "<%= live_patch %> block"
  },

  "LiveView live_redirect": {
    "prefix": "lr",
    "body": [
      "<%= live_redirect \"$1\", to: Routes.${2:resource}_path(@socket, :${2:show}) %>%0",
      "$2"
    ],
    "description": "<%= live_redirect %>"
  },

  "LiveView live_redirect block": {
    "prefix": "lrb",
    "body": [
      "<%= live_redirect to: Routes.${1:resource}_path(@socket, :${2:show}) do %>",
      "\t$3",
      "<% end %>$0"
    ],
    "description": "<%= live_redirect %> block"
  },

  "Sigil P": {
    "prefix": "sp",
    "body": ["~p\"$0\""]
  }
}
